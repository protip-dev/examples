// protocol buffer code generated by https://protip.dev

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/helloworld/helloworld.proto

package helloworld

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SayHelloRequest struct {
	// Two-letter ISO 639-1 language code, defaults to "en".
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHelloRequest) Reset()         { *m = SayHelloRequest{} }
func (m *SayHelloRequest) String() string { return proto.CompactTextString(m) }
func (*SayHelloRequest) ProtoMessage()    {}
func (*SayHelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d16ac54e3a89a4f6, []int{0}
}

func (m *SayHelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHelloRequest.Unmarshal(m, b)
}
func (m *SayHelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHelloRequest.Marshal(b, m, deterministic)
}
func (m *SayHelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHelloRequest.Merge(m, src)
}
func (m *SayHelloRequest) XXX_Size() int {
	return xxx_messageInfo_SayHelloRequest.Size(m)
}
func (m *SayHelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SayHelloRequest proto.InternalMessageInfo

func (m *SayHelloRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type SayHelloResponse struct {
	// The word "hello" for the given language.
	Hello                string   `protobuf:"bytes,1,opt,name=hello,proto3" json:"hello,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHelloResponse) Reset()         { *m = SayHelloResponse{} }
func (m *SayHelloResponse) String() string { return proto.CompactTextString(m) }
func (*SayHelloResponse) ProtoMessage()    {}
func (*SayHelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d16ac54e3a89a4f6, []int{1}
}

func (m *SayHelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHelloResponse.Unmarshal(m, b)
}
func (m *SayHelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHelloResponse.Marshal(b, m, deterministic)
}
func (m *SayHelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHelloResponse.Merge(m, src)
}
func (m *SayHelloResponse) XXX_Size() int {
	return xxx_messageInfo_SayHelloResponse.Size(m)
}
func (m *SayHelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SayHelloResponse proto.InternalMessageInfo

func (m *SayHelloResponse) GetHello() string {
	if m != nil {
		return m.Hello
	}
	return ""
}

type CurrentTimeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentTimeRequest) Reset()         { *m = CurrentTimeRequest{} }
func (m *CurrentTimeRequest) String() string { return proto.CompactTextString(m) }
func (*CurrentTimeRequest) ProtoMessage()    {}
func (*CurrentTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d16ac54e3a89a4f6, []int{2}
}

func (m *CurrentTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentTimeRequest.Unmarshal(m, b)
}
func (m *CurrentTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentTimeRequest.Marshal(b, m, deterministic)
}
func (m *CurrentTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentTimeRequest.Merge(m, src)
}
func (m *CurrentTimeRequest) XXX_Size() int {
	return xxx_messageInfo_CurrentTimeRequest.Size(m)
}
func (m *CurrentTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentTimeRequest proto.InternalMessageInfo

type CurrentTimeResponse struct {
	// The current server time.
	CurrentTime          *timestamp.Timestamp `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CurrentTimeResponse) Reset()         { *m = CurrentTimeResponse{} }
func (m *CurrentTimeResponse) String() string { return proto.CompactTextString(m) }
func (*CurrentTimeResponse) ProtoMessage()    {}
func (*CurrentTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d16ac54e3a89a4f6, []int{3}
}

func (m *CurrentTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentTimeResponse.Unmarshal(m, b)
}
func (m *CurrentTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentTimeResponse.Marshal(b, m, deterministic)
}
func (m *CurrentTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentTimeResponse.Merge(m, src)
}
func (m *CurrentTimeResponse) XXX_Size() int {
	return xxx_messageInfo_CurrentTimeResponse.Size(m)
}
func (m *CurrentTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentTimeResponse proto.InternalMessageInfo

func (m *CurrentTimeResponse) GetCurrentTime() *timestamp.Timestamp {
	if m != nil {
		return m.CurrentTime
	}
	return nil
}

func init() {
	proto.RegisterType((*SayHelloRequest)(nil), "protip.examples.helloworld.SayHelloRequest")
	proto.RegisterType((*SayHelloResponse)(nil), "protip.examples.helloworld.SayHelloResponse")
	proto.RegisterType((*CurrentTimeRequest)(nil), "protip.examples.helloworld.CurrentTimeRequest")
	proto.RegisterType((*CurrentTimeResponse)(nil), "protip.examples.helloworld.CurrentTimeResponse")
}

func init() { proto.RegisterFile("proto/helloworld/helloworld.proto", fileDescriptor_d16ac54e3a89a4f6) }

var fileDescriptor_d16ac54e3a89a4f6 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xed, 0x41, 0x59, 0xa7, 0x0b, 0x4a, 0xdc, 0x83, 0xe4, 0xa2, 0xe6, 0xb4, 0xa0, 0x4e,
	0x61, 0x3d, 0x7b, 0xd1, 0x8b, 0xe7, 0x5a, 0x10, 0xbc, 0x48, 0x76, 0x1d, 0x63, 0x21, 0x6d, 0x62,
	0x93, 0xa2, 0x3e, 0xb1, 0xaf, 0x21, 0x4d, 0x5a, 0xbb, 0x2a, 0xca, 0x9e, 0xda, 0x24, 0xdf, 0xfc,
	0xf3, 0xcd, 0xc0, 0x89, 0x6d, 0x8c, 0x37, 0xd9, 0x33, 0x69, 0x6d, 0x5e, 0x4d, 0xa3, 0x1f, 0xd7,
	0x7e, 0x31, 0xbc, 0x31, 0xde, 0x7d, 0x4a, 0x8b, 0xf4, 0x26, 0x2b, 0xab, 0xc9, 0xe1, 0x48, 0xf0,
	0x23, 0x65, 0x8c, 0xd2, 0x94, 0x05, 0x72, 0xd9, 0x3e, 0x65, 0xbe, 0xac, 0xc8, 0x79, 0x59, 0xd9,
	0x58, 0x2c, 0xce, 0x61, 0xef, 0x56, 0xbe, 0xdf, 0x74, 0x15, 0x39, 0xbd, 0xb4, 0xe4, 0x3c, 0xe3,
	0x30, 0xd1, 0xb2, 0x56, 0xad, 0x54, 0x74, 0x98, 0x1c, 0x27, 0xf3, 0xdd, 0xfc, 0xeb, 0x2c, 0xe6,
	0xb0, 0x3f, 0xe2, 0xce, 0x9a, 0xda, 0x11, 0x9b, 0xc1, 0x76, 0xe8, 0xd8, 0xc3, 0xf1, 0x20, 0x66,
	0xc0, 0xae, 0xdb, 0xa6, 0xa1, 0xda, 0x17, 0x65, 0x45, 0x7d, 0xb6, 0x28, 0xe0, 0xe0, 0xdb, 0x6d,
	0x1f, 0x71, 0x09, 0xd3, 0x55, 0xbc, 0x7e, 0xe8, 0x04, 0x43, 0x52, 0xba, 0xe0, 0x18, 0xed, 0x71,
	0xb0, 0xc7, 0x62, 0xb0, 0xcf, 0xd3, 0xd5, 0x18, 0xb3, 0xf8, 0x48, 0x00, 0x82, 0xd3, 0x5d, 0x37,
	0x34, 0x53, 0x30, 0x19, 0x24, 0xd9, 0x29, 0xfe, 0xbd, 0x1d, 0xfc, 0x31, 0x39, 0x3f, 0xdb, 0x0c,
	0x8e, 0xd2, 0x62, 0x8b, 0x59, 0x48, 0xd7, 0xa6, 0x61, 0xf8, 0x5f, 0xf9, 0xef, 0x65, 0xf0, 0x6c,
	0x63, 0x7e, 0xe8, 0x78, 0x35, 0xbd, 0x87, 0x91, 0x59, 0xee, 0x84, 0xc5, 0x5c, 0x7c, 0x06, 0x00,
	0x00, 0xff, 0xff, 0x71, 0xf4, 0x8f, 0x7c, 0x25, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloWorldClient is the client API for HelloWorld service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloWorldClient interface {
	// SayHello returns "hello" for a given language.
	//
	// Returns NotFound error if translation for a given language is not found.
	SayHello(ctx context.Context, in *SayHelloRequest, opts ...grpc.CallOption) (*SayHelloResponse, error)
	// CurrentTime returns the current server time.
	CurrentTime(ctx context.Context, in *CurrentTimeRequest, opts ...grpc.CallOption) (*CurrentTimeResponse, error)
}

type helloWorldClient struct {
	cc *grpc.ClientConn
}

func NewHelloWorldClient(cc *grpc.ClientConn) HelloWorldClient {
	return &helloWorldClient{cc}
}

func (c *helloWorldClient) SayHello(ctx context.Context, in *SayHelloRequest, opts ...grpc.CallOption) (*SayHelloResponse, error) {
	out := new(SayHelloResponse)
	err := c.cc.Invoke(ctx, "/protip.examples.helloworld.HelloWorld/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloWorldClient) CurrentTime(ctx context.Context, in *CurrentTimeRequest, opts ...grpc.CallOption) (*CurrentTimeResponse, error) {
	out := new(CurrentTimeResponse)
	err := c.cc.Invoke(ctx, "/protip.examples.helloworld.HelloWorld/CurrentTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloWorldServer is the server API for HelloWorld service.
type HelloWorldServer interface {
	// SayHello returns "hello" for a given language.
	//
	// Returns NotFound error if translation for a given language is not found.
	SayHello(context.Context, *SayHelloRequest) (*SayHelloResponse, error)
	// CurrentTime returns the current server time.
	CurrentTime(context.Context, *CurrentTimeRequest) (*CurrentTimeResponse, error)
}

// UnimplementedHelloWorldServer can be embedded to have forward compatible implementations.
type UnimplementedHelloWorldServer struct {
}

func (*UnimplementedHelloWorldServer) SayHello(ctx context.Context, req *SayHelloRequest) (*SayHelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedHelloWorldServer) CurrentTime(ctx context.Context, req *CurrentTimeRequest) (*CurrentTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CurrentTime not implemented")
}

func RegisterHelloWorldServer(s *grpc.Server, srv HelloWorldServer) {
	s.RegisterService(&_HelloWorld_serviceDesc, srv)
}

func _HelloWorld_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayHelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloWorldServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protip.examples.helloworld.HelloWorld/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloWorldServer).SayHello(ctx, req.(*SayHelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloWorld_CurrentTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CurrentTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloWorldServer).CurrentTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protip.examples.helloworld.HelloWorld/CurrentTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloWorldServer).CurrentTime(ctx, req.(*CurrentTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloWorld_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protip.examples.helloworld.HelloWorld",
	HandlerType: (*HelloWorldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _HelloWorld_SayHello_Handler,
		},
		{
			MethodName: "CurrentTime",
			Handler:    _HelloWorld_CurrentTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/helloworld/helloworld.proto",
}
